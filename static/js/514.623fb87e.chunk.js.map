{"version":3,"file":"static/js/514.623fb87e.chunk.js","mappings":"gOACA,EAA8B,+BAA9B,EAAoE,wBAApE,EAAwG,6BAAxG,EAAiJ,6BAAjJ,EAAwL,2BAAxL,EAA2N,yB,SCKrNA,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IACvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaE,IAAI,EAAG,yBAGnBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBT,EAClBU,SAde,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BP,GACEQ,EAAAA,EAAAA,IAAU,CACRf,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,YAGrBa,GACD,EAGG,UAKE,UAAC,KAAD,CAAML,UAAWC,EAAUM,aAAa,MAAxC,WACE,mBAAOP,UAAWC,EAAeO,QAAQ,QAAzC,UAAiD,SAE/C,SAAC,KAAD,CACER,UAAWC,EACXQ,KAAK,QACLC,KAAK,QACLC,UAAQ,KAEV,iBAAMX,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcS,KAAK,gBAGvB,mBAAOV,UAAWC,EAAeO,QAAQ,WAAzC,UAAoD,YAElD,SAAC,KAAD,CACER,UAAWC,EACXQ,KAAK,WACLC,KAAK,WACLC,UAAQ,KAEV,iBAAMX,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcS,KAAK,mBAGvB,mBAAQD,KAAK,SAAST,UAAWC,EAAjC,SAA8C,iBAOvD,EC9Dc,SAASW,IACtB,OAAO,SAACf,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__Sc8W5\",\"form\":\"LoginForm_form__gPEx5\",\"formLabel\":\"LoginForm_formLabel__Ogzum\",\"formInput\":\"LoginForm_formInput__kt+x6\",\"formBtn\":\"LoginForm_formBtn__HRL1P\",\"error\":\"LoginForm_error__012y+\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport css from './LoginForm.module.css';\n\nconst initialValues = { email: '', password: '' };\nconst schema = Yup.object().shape({\n  email: Yup.string().email(),\n  password: Yup.string().min(5, 'Too short password!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      userLogin({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n  return (\n    <div className={css.formWrapper}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.formLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={css.formInput}\n              type=\"email\"\n              name=\"email\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"password\">\n            Password\n            <Field\n              className={css.formInput}\n              type=\"password\"\n              name=\"password\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"password\" />\n            </span>\n          </label>\n          <button type=\"submit\" className={css.formBtn}>\n            Log In\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["initialValues","email","password","schema","Yup","shape","min","LoginForm","dispatch","useDispatch","className","css","validationSchema","onSubmit","values","resetForm","userLogin","autoComplete","htmlFor","type","name","required","LoginPage"],"sourceRoot":""}