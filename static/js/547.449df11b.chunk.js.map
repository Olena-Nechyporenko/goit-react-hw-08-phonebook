{"version":3,"file":"static/js/547.449df11b.chunk.js","mappings":"gOACA,EAA8B,kCAA9B,EAAuE,2BAAvE,EAA8G,gCAA9G,EAA0J,gCAA1J,EAAoM,8BAApM,EAA0O,4B,SCKpOA,EAAgB,CAAEC,SAAU,GAAIC,MAAO,GAAIC,SAAU,IACrDC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,SAAUI,EAAAA,KACVH,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaE,IAAI,EAAG,yBAGnBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEZ,cAAeA,EACfa,iBAAkBT,EAClBU,SAfe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BP,GACEQ,EAAAA,EAAAA,IAAa,CACXC,KAAMH,EAAOd,SACbC,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,YAGrBa,GACD,EAGG,UAKE,UAAC,KAAD,CAAML,UAAWC,EAAUO,aAAa,MAAxC,WACE,mBAAOR,UAAWC,EAAeQ,QAAQ,WAAzC,UAAoD,YAElD,SAAC,KAAD,CACET,UAAWC,EACXS,KAAK,OACLH,KAAK,WACLI,UAAQ,KAEV,iBAAMX,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcM,KAAK,mBAGvB,mBAAOP,UAAWC,EAAeQ,QAAQ,QAAzC,UAAiD,SAE/C,SAAC,KAAD,CACET,UAAWC,EACXS,KAAK,QACLH,KAAK,QACLI,UAAQ,KAEV,iBAAMX,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcM,KAAK,gBAGvB,mBAAOP,UAAWC,EAAeQ,QAAQ,WAAzC,UAAoD,YAElD,SAAC,KAAD,CACET,UAAWC,EACXS,KAAK,WACLH,KAAK,WACLI,UAAQ,KAEV,iBAAMX,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcM,KAAK,mBAGvB,mBAAQP,UAAWC,EAAaS,KAAK,SAArC,SAA8C,mBAOvD,EC5Ec,SAASE,IACtB,OAAO,SAACf,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegisterForm_formWrapper__5v4BM\",\"form\":\"RegisterForm_form__Tv43W\",\"formLabel\":\"RegisterForm_formLabel__om6l+\",\"formInput\":\"RegisterForm_formInput__Rum0L\",\"formBtn\":\"RegisterForm_formBtn__uyMmA\",\"error\":\"RegisterForm_error__yDHjz\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { userRegister } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport css from './RegisterForm.module.css';\n\nconst initialValues = { username: '', email: '', password: '' };\nconst schema = Yup.object().shape({\n  username: Yup.string(),\n  email: Yup.string().email(),\n  password: Yup.string().min(7, 'Too short password!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      userRegister({\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n  return (\n    <div className={css.formWrapper}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.formLabel} htmlFor=\"username\">\n            Username\n            <Field\n              className={css.formInput}\n              type=\"text\"\n              name=\"username\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"username\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={css.formInput}\n              type=\"email\"\n              name=\"email\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"password\">\n            Password\n            <Field\n              className={css.formInput}\n              type=\"password\"\n              name=\"password\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"password\" />\n            </span>\n          </label>\n          <button className={css.formBtn} type=\"submit\">\n            Register\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["initialValues","username","email","password","schema","Yup","shape","min","RegisterForm","dispatch","useDispatch","className","css","validationSchema","onSubmit","values","resetForm","userRegister","name","autoComplete","htmlFor","type","required","RegisterPage"],"sourceRoot":""}